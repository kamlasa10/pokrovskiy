@mixin font-face($font-family, $url, $weight: normal, $style: normal, $asset-pipeline: false) {
  @font-face {
    font-family: '#{$font-family}';
    font-weight: #{$weight};
    font-style: '#{$style}';

    src: url('#{$url}.eot');
    src: url('#{$url}.eot?#iefix') format('embedded-opentype'),
    url('#{$url}.woff') format('woff'),
    url('#{$url}.ttf') format('truetype');
  }
}

// Function for converting a px based font-size to rem.
  @function rem($size) {
    $remSize: $size / 14px;
    @return #{$remSize}rem;
  }

@mixin flexCenter(){
  display: flex;
  align-items: center;
  justify-content: center;
}


//@mixin fz(){
  @function max($numbers...){

    @return m#{a}x(#{$numbers})
  };

  @function min($numbers...){

    @return m#{i}n(#{$numbers})
  };


  $full-width: 1920;
  $work-width: 80;
  $screen-height: 720;

  @function vmax($pixels, $context: $full-width) {
    @return #{($pixels/$context)* 100}vmax
  };

  @function vw($pixels, $context: $full-width) {
    @return #{($pixels/$context)* 100}vw
  }
  @function lh($lh, $fz) {
    @return #{($lh/$fz)}em
  }
//}